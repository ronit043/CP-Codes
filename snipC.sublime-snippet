<snippet>
	<content><![CDATA[
#pragma GCC optimize("O3,unroll-loops")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;

#ifndef ONLINE_JUDGE
#include "debug.hpp"
#else
#define dbg(...)
#endif

#define  iOS           ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define  ln            "\n"
#define  all(x)        x.begin(), x.end()
#define  rall(x)       x.end(), x.begin()
#define  fill(a, b)    memset(a, b, sizeof(a))
#define  cntns(c, x)   c.find(x) != c.end()
#define  setBits       __builtin_popcountll
#define  var           auto

#define  mod           1000000007
#define  mod1          998244353
#define  inf           1e18
#define  pi            3.141592653589793238462

using ll = long long; using ull = unsigned long long; using ld = long double;
/*-----------------------------------------------------------------------------------------------------*/
// Use math snippet here
/*-----------------------------------------------------------------------------------------------------*/

void solve() {
	
}

int main() {
    freopen("Error.txt", "w", stderr);
    iOS
    int tests; cin >> tests;
    for (int tc = 0; tc < tests; tc++) {
        solve();
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>snip</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>